{"version":3,"file":"bundle.fef731df997ded3470f6.js","mappings":"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","sources":["webpack://snake/./src/mainLoop.js","webpack://snake/./src/keyboard.js","webpack://snake/./src/gameObject.js","webpack://snake/./src/utils.js","webpack://snake/./src/gameMap.js","webpack://snake/./src/snake/constants.js","webpack://snake/./src/snake/snakeBody.js","webpack://snake/./src/snake/snakeHead.js","webpack://snake/./src/snake/snakeTail.js","webpack://snake/./src/event.js","webpack://snake/./src/snake/snake.js","webpack://snake/./src/food.js","webpack://snake/./src/priorityQueue.js","webpack://snake/./src/aStar.js","webpack://snake/./src/ai.js","webpack://snake/./src/index.js","webpack://snake/./src/renderer.js","webpack://snake/./src/resultText.js"],"sourcesContent":["const LOOP_STATUS = {\r\n  RUNNING: 0,\r\n  PAUSED: 1,\r\n  STOPPED: 2\r\n}\r\n\r\nexport class MainLoop {\r\n  loopStatus = LOOP_STATUS.PAUSED;\r\n\r\n  onLoop;\r\n\r\n  lastTimeStamp;\r\n\r\n  setOnLoop (onLoop) {\r\n    this.onLoop = onLoop\r\n  }\r\n\r\n  loop (timestamp) {\r\n    const elapsed = timestamp - this.lastTimeStamp\r\n    this.lastTimeStamp = timestamp\r\n    this.onLoop && this.onLoop(elapsed)\r\n    window.requestAnimationFrame(this.loop.bind(this))\r\n  }\r\n\r\n  start () {\r\n    if (this.loopStatus === LOOP_STATUS.PAUSED) {\r\n      this.loopStatus = LOOP_STATUS.RUNNING\r\n\r\n      this.lastTimeStamp = window.performance.now()\r\n      window.requestAnimationFrame(this.loop.bind(this))\r\n    }\r\n  }\r\n\r\n  pause () {\r\n    if (this.loopStatus === LOOP_STATUS.RUNNING) {\r\n      this.loopStatus = LOOP_STATUS.PAUSED\r\n    }\r\n  }\r\n\r\n  stop () {\r\n    if (this.loopStatus !== LOOP_STATUS.STOPPED) {\r\n      this.loopStatus = LOOP_STATUS.STOPPED\r\n    }\r\n  }\r\n}\r\n","const KEY_STATUS = {\r\n  PRESSED: 'pressed',\r\n  RELEASED: 'released'\r\n}\r\n\r\nconst keyStatus = {}\r\n\r\nwindow.addEventListener('keydown', (event) => {\r\n  const code = event.code\r\n  keyStatus[code] = KEY_STATUS.PRESSED\r\n})\r\n\r\nwindow.addEventListener('keyup', (event) => {\r\n  const code = event.code\r\n  keyStatus[code] = KEY_STATUS.RELEASED\r\n})\r\n\r\nexport class Keyboard {\r\n  static isPressed (key) {\r\n    return keyStatus[key] === KEY_STATUS.PRESSED\r\n  }\r\n\r\n  static isReleased (key) {\r\n    return keyStatus[key] === KEY_STATUS.RELEASED\r\n  }\r\n\r\n  constructor (key) {\r\n    this.key = key\r\n  }\r\n\r\n  isPressed () {\r\n    return Keyboard.isPressed(this.key)\r\n  }\r\n\r\n  isReleased () {\r\n    return Keyboard.isReleased(this.key)\r\n  }\r\n}\r\n","export class GameObject {\r\n  constructor (x, y) {\r\n    this.x = x\r\n    this.y = y\r\n    this.visible = true\r\n  }\r\n\r\n  update () {}\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  draw (renderer) {}\r\n}\r\n","export const getRandomInt = (min, max) => {\r\n  min = Math.ceil(min)\r\n  max = Math.floor(max)\r\n  return Math.floor(Math.random() * (max - min)) + min\r\n}\r\n\r\nexport const isTouchable = () => {\r\n  return 'ontouchstart' in window || navigator.maxTouchPoints\r\n}\r\n\r\n/** logic position to real position */\r\nexport const LP2RP = (x, y, pixelSize) => {\r\n  return {\r\n    x: x * pixelSize * 8,\r\n    y: y * pixelSize * 8\r\n  }\r\n}\r\n\r\nexport const shuffle = (arr) => {\r\n  for (let i = 0; i < arr.length; i++) {\r\n    const j = getRandomInt(0, arr.length);\r\n    [arr[i], arr[j]] = [arr[j], arr[i]]\r\n  }\r\n}\r\n","import { GameObject } from './gameObject.js'\r\nimport { getRandomInt, LP2RP } from './utils.js'\r\n\r\nconst COLORS = [\r\n  '',\r\n  '#23d57d', '#11804b', '#084b2a', '#8f4613',\r\n  '#cb651b', '#522a07', '#6e7679'\r\n]\r\n\r\nconst PIXEL_DATAS = {\r\n  TREE: [\r\n    [0, 0, 1, 1, 2, 2, 0, 0],\r\n    [0, 1, 2, 2, 2, 2, 2, 0],\r\n    [1, 2, 2, 2, 2, 2, 2, 2],\r\n    [0, 2, 2, 2, 2, 2, 2, 0],\r\n    [3, 3, 2, 3, 3, 2, 2, 3],\r\n    [0, 3, 3, 4, 4, 3, 3, 0],\r\n    [0, 0, 4, 4, 4, 4, 0, 0],\r\n    [0, 4, 4, 4, 4, 4, 4, 0]\r\n  ],\r\n  OAK: [\r\n    [0, 0, 5, 5, 5, 4, 0, 0],\r\n    [0, 5, 5, 4, 4, 4, 4, 0],\r\n    [0, 4, 4, 4, 4, 4, 4, 0],\r\n    [0, 4, 4, 4, 4, 4, 4, 0],\r\n    [0, 4, 4, 6, 6, 4, 6, 0],\r\n    [0, 0, 6, 7, 7, 6, 0, 0],\r\n    [0, 0, 0, 7, 7, 0, 0, 0],\r\n    [0, 0, 0, 7, 7, 0, 0, 0]\r\n  ],\r\n  CELL: [\r\n    [0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0]\r\n  ]\r\n}\r\n\r\nexport class GameMap extends GameObject {\r\n  constructor (config) {\r\n    const {\r\n      x,\r\n      y,\r\n      rowNums,\r\n      colNums,\r\n      pixelSize\r\n    } = config\r\n    super(x, y)\r\n    this.rowNums = rowNums\r\n    this.colNums = colNums\r\n    this.pixelSize = pixelSize\r\n\r\n    this._treeTypeArr = Array(rowNums * 2 + colNums * 2 + 4)\r\n    for (let i = 0; i < this._treeTypeArr.length; i++) {\r\n      this._treeTypeArr[i] = ['TREE', 'OAK'][getRandomInt(0, 2)]\r\n    }\r\n  }\r\n\r\n  update () {}\r\n\r\n  draw (renderer) {\r\n    this._drawTrees(renderer)\r\n    this._drawCells(renderer)\r\n  }\r\n\r\n  _drawCell (renderer, x, y, type) {\r\n    const pixelData = PIXEL_DATAS[type]\r\n    const { pixelSize } = this\r\n    const { x: rx, y: ry } = LP2RP(x, y, pixelSize)\r\n    for (let r = 0; r < pixelData.length; r++) {\r\n      for (let c = 0; c < pixelData[r].length; c++) {\r\n        if (pixelData[r][c] !== 0) {\r\n          renderer.drawRect(\r\n            rx + c * pixelSize,\r\n            ry + r * pixelSize,\r\n            pixelSize,\r\n            pixelSize,\r\n            COLORS[pixelData[r][c]]\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _drawTrees (renderer) {\r\n    let typeIndex = 0\r\n    for (let r = 0; r < this.rowNums + 2; ++r) {\r\n      this._drawCell(renderer, 0, r, this._treeTypeArr[typeIndex++])\r\n      this._drawCell(renderer, this.colNums + 1, r, this._treeTypeArr[typeIndex++])\r\n    }\r\n    for (let c = 1; c <= this.colNums; ++c) {\r\n      this._drawCell(renderer, c, 0, this._treeTypeArr[typeIndex++])\r\n      this._drawCell(renderer, c, this.colNums + 1, this._treeTypeArr[typeIndex++])\r\n    }\r\n  }\r\n\r\n  _drawCells (renderer) {\r\n    for (let r = 0; r < this.rowNums; ++r) {\r\n      for (let c = 0; c < this.colNums; ++c) {\r\n        this._drawCell(renderer, c + 1, r + 1, 'CELL')\r\n      }\r\n    }\r\n  }\r\n}\r\n","export const DIRECTION = {\r\n  UP: 1,\r\n  RIGHT: 2,\r\n  DOWN: 4,\r\n  LEFT: 8\r\n}\r\n\r\nexport const INVALID_DIRECTION = {\r\n  [DIRECTION.UP]: DIRECTION.DOWN,\r\n  [DIRECTION.RIGHT]: DIRECTION.LEFT,\r\n  [DIRECTION.DOWN]: DIRECTION.UP,\r\n  [DIRECTION.LEFT]: DIRECTION.RIGHT\r\n}\r\n\r\nexport const directionValues = {\r\n  [DIRECTION.UP]: [-1, 0],\r\n  [DIRECTION.RIGHT]: [0, 1],\r\n  [DIRECTION.DOWN]: [1, 0],\r\n  [DIRECTION.LEFT]: [0, -1]\r\n}\r\n","import { GameObject } from '../gameObject.js'\r\nimport { DIRECTION } from './constants.js'\r\nimport { LP2RP } from '../utils.js'\r\n\r\nconst HORIZONTAL_PIXEL_DATAS = [\r\n  [0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0],\r\n  [3, 3, 3, 3, 3, 3, 3, 3],\r\n  [3, 1, 1, 1, 3, 1, 1, 1],\r\n  [1, 1, 1, 3, 1, 1, 1, 3],\r\n  [3, 3, 3, 3, 3, 3, 3, 3],\r\n  [0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0]\r\n]\r\n\r\nconst VERTICAL_PIXEL_DATAS = [\r\n  [0, 0, 3, 3, 1, 3, 0, 0],\r\n  [0, 0, 3, 1, 1, 3, 0, 0],\r\n  [0, 0, 3, 1, 1, 3, 0, 0],\r\n  [0, 0, 3, 1, 3, 3, 0, 0],\r\n  [0, 0, 3, 3, 1, 3, 0, 0],\r\n  [0, 0, 3, 1, 1, 3, 0, 0],\r\n  [0, 0, 3, 1, 1, 3, 0, 0],\r\n  [0, 0, 3, 1, 3, 3, 0, 0]\r\n]\r\n\r\nexport class SnakeBody extends GameObject {\r\n  static TYPES = {\r\n    HORIZONTAL: 0,\r\n    VERTICAL: 1,\r\n    LEFTTOP: 2,\r\n    RIGHTTOP: 3,\r\n    LEFTBOTTOM: 4,\r\n    RIGHTBOTTOM: 5,\r\n    UP: 6,\r\n    RIGHT: 7,\r\n    DOWN: 8,\r\n    LEFT: 9\r\n  }\r\n\r\n  static ENDPOINT_TYPES = [\r\n    SnakeBody.TYPES.UP,\r\n    SnakeBody.TYPES.RIGHT,\r\n    SnakeBody.TYPES.DOWN,\r\n    SnakeBody.TYPES.LEFT\r\n  ]\r\n\r\n  static ENDPOINT_TYPES_TO_TYPES = {\r\n    [SnakeBody.TYPES.UP]: SnakeBody.TYPES.VERTICAL,\r\n    [SnakeBody.TYPES.RIGHT]: SnakeBody.TYPES.HORIZONTAL,\r\n    [SnakeBody.TYPES.DOWN]: SnakeBody.TYPES.VERTICAL,\r\n    [SnakeBody.TYPES.LEFT]: SnakeBody.TYPES.HORIZONTAL\r\n  }\r\n\r\n  static DIRECTION_TO_TYPE = {\r\n    ['' + DIRECTION.UP + DIRECTION.RIGHT]: SnakeBody.TYPES.LEFTTOP,\r\n    ['' + DIRECTION.UP + DIRECTION.LEFT]: SnakeBody.TYPES.RIGHTTOP,\r\n    ['' + DIRECTION.RIGHT + DIRECTION.DOWN]: SnakeBody.TYPES.RIGHTTOP,\r\n    ['' + DIRECTION.RIGHT + DIRECTION.UP]: SnakeBody.TYPES.RIGHTBOTTOM,\r\n    ['' + DIRECTION.DOWN + DIRECTION.LEFT]: SnakeBody.TYPES.RIGHTBOTTOM,\r\n    ['' + DIRECTION.DOWN + DIRECTION.RIGHT]: SnakeBody.TYPES.LEFTBOTTOM,\r\n    ['' + DIRECTION.LEFT + DIRECTION.UP]: SnakeBody.TYPES.LEFTBOTTOM,\r\n    ['' + DIRECTION.LEFT + DIRECTION.DOWN]: SnakeBody.TYPES.LEFTTOP\r\n  }\r\n\r\n  static COLORS = [\r\n    '',\r\n    'Green', 'Black', 'DarkGreen', 'Pink'\r\n  ];\r\n\r\n  static PIXEL_DATAS = {\r\n    [SnakeBody.TYPES.HORIZONTAL]: HORIZONTAL_PIXEL_DATAS,\r\n    [SnakeBody.TYPES.RIGHT]: HORIZONTAL_PIXEL_DATAS,\r\n    [SnakeBody.TYPES.LEFT]: HORIZONTAL_PIXEL_DATAS,\r\n    [SnakeBody.TYPES.VERTICAL]: VERTICAL_PIXEL_DATAS,\r\n    [SnakeBody.TYPES.UP]: VERTICAL_PIXEL_DATAS,\r\n    [SnakeBody.TYPES.DOWN]: VERTICAL_PIXEL_DATAS,\r\n    [SnakeBody.TYPES.LEFTTOP]: [\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 3, 3, 3, 3],\r\n      [0, 0, 0, 3, 3, 1, 1, 1],\r\n      [0, 0, 3, 3, 1, 1, 1, 3],\r\n      [0, 0, 3, 1, 1, 1, 3, 3],\r\n      [0, 0, 3, 1, 1, 3, 0, 0],\r\n      [0, 0, 3, 1, 3, 3, 0, 0]\r\n    ],\r\n    [SnakeBody.TYPES.RIGHTTOP]: [\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [3, 3, 3, 3, 0, 0, 0, 0],\r\n      [3, 1, 1, 1, 3, 0, 0, 0],\r\n      [1, 1, 1, 3, 1, 3, 0, 0],\r\n      [3, 3, 1, 1, 1, 3, 0, 0],\r\n      [0, 0, 3, 1, 1, 3, 0, 0],\r\n      [0, 0, 3, 1, 3, 3, 0, 0]\r\n    ],\r\n    [SnakeBody.TYPES.LEFTBOTTOM]: [\r\n      [0, 0, 3, 3, 1, 3, 0, 0],\r\n      [0, 0, 3, 1, 1, 3, 0, 0],\r\n      [0, 0, 3, 1, 1, 1, 3, 3],\r\n      [0, 0, 3, 1, 3, 1, 1, 1],\r\n      [0, 0, 0, 3, 1, 1, 1, 3],\r\n      [0, 0, 0, 0, 3, 3, 3, 3],\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0]\r\n    ],\r\n    [SnakeBody.TYPES.RIGHTBOTTOM]: [\r\n      [0, 0, 3, 3, 1, 3, 0, 0],\r\n      [0, 0, 3, 1, 1, 3, 0, 0],\r\n      [3, 3, 1, 1, 1, 3, 0, 0],\r\n      [3, 1, 1, 1, 3, 3, 0, 0],\r\n      [1, 1, 1, 3, 3, 0, 0, 0],\r\n      [3, 3, 3, 3, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0]\r\n    ]\r\n  }\r\n\r\n  constructor (x, y, pixelSize, type) {\r\n    super(x, y)\r\n    this.pixelSize = pixelSize\r\n    this.type = type || SnakeBody.TYPES.HORIZONTAL\r\n  }\r\n\r\n  update () {}\r\n\r\n  draw (renderer) {\r\n    const { pixelSize, type } = this\r\n    const { x, y } = LP2RP(this.x, this.y, pixelSize)\r\n    const pixelData = this._getPixelData(type)\r\n    for (let r = 0; r < pixelData.length; r++) {\r\n      for (let c = 0; c < pixelData[r].length; c++) {\r\n        if (pixelData[r][c] !== 0) {\r\n          renderer.drawRect(x + c * pixelSize, y + r * pixelSize, pixelSize, pixelSize, this._getColor(pixelData[r][c]))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _getPixelData (type) {\r\n    return SnakeBody.PIXEL_DATAS[type]\r\n  }\r\n\r\n  _getColor (colorType) {\r\n    return SnakeBody.COLORS[colorType]\r\n  }\r\n}\r\n","import { SnakeBody } from './snakeBody.js'\r\nimport { DIRECTION } from './constants.js'\r\n\r\nexport class SnakeHead extends SnakeBody {\r\n  static DIRECTION_TO_TYPE = {\r\n    [DIRECTION.UP]: SnakeBody.TYPES.UP,\r\n    [DIRECTION.RIGHT]: SnakeBody.TYPES.RIGHT,\r\n    [DIRECTION.DOWN]: SnakeBody.TYPES.DOWN,\r\n    [DIRECTION.LEFT]: SnakeBody.TYPES.LEFT\r\n  }\r\n\r\n  static PIXEL_DATAS = {\r\n    [SnakeBody.TYPES.UP]: [\r\n      [0, 0, 0, 4, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 4, 0, 0, 0],\r\n      [0, 0, 0, 3, 3, 0, 0, 0],\r\n      [0, 0, 3, 1, 1, 3, 0, 0],\r\n      [0, 0, 2, 1, 1, 2, 0, 0],\r\n      [0, 0, 3, 1, 1, 3, 0, 0],\r\n      [0, 0, 3, 1, 1, 3, 0, 0],\r\n      [0, 0, 3, 1, 3, 3, 0, 0]\r\n    ],\r\n    [SnakeBody.TYPES.RIGHT]: [\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [3, 3, 3, 3, 3, 0, 0, 0],\r\n      [3, 1, 1, 2, 1, 3, 0, 4],\r\n      [1, 1, 1, 1, 1, 3, 4, 0],\r\n      [3, 3, 3, 3, 3, 3, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0]\r\n    ],\r\n    [SnakeBody.TYPES.DOWN]: [\r\n      [0, 0, 3, 3, 1, 3, 0, 0],\r\n      [0, 0, 3, 1, 1, 3, 0, 0],\r\n      [0, 0, 3, 1, 1, 3, 0, 0],\r\n      [0, 0, 2, 1, 1, 2, 0, 0],\r\n      [0, 0, 3, 1, 1, 3, 0, 0],\r\n      [0, 0, 0, 3, 3, 0, 0, 0],\r\n      [0, 0, 0, 4, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 4, 0, 0, 0]\r\n    ],\r\n    [SnakeBody.TYPES.LEFT]: [\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 3, 3, 3, 3, 3],\r\n      [4, 0, 3, 1, 2, 1, 1, 1],\r\n      [0, 4, 3, 1, 1, 1, 1, 3],\r\n      [0, 0, 3, 3, 3, 3, 3, 3],\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0]\r\n    ]\r\n  }\r\n\r\n  update () {}\r\n\r\n  draw (renderer) {\r\n    super.draw(renderer)\r\n  }\r\n\r\n  _getPixelData (type) {\r\n    return SnakeHead.PIXEL_DATAS[type]\r\n  }\r\n}\r\n","import { SnakeBody } from './snakeBody.js'\r\nimport { DIRECTION } from './constants.js'\r\n\r\nexport class SnakeTail extends SnakeBody {\r\n  static DIRECTION_TO_TYPE = {\r\n    [DIRECTION.UP]: SnakeBody.TYPES.UP,\r\n    [DIRECTION.RIGHT]: SnakeBody.TYPES.RIGHT,\r\n    [DIRECTION.DOWN]: SnakeBody.TYPES.DOWN,\r\n    [DIRECTION.LEFT]: SnakeBody.TYPES.LEFT\r\n  }\r\n\r\n  static PIXEL_DATAS = {\r\n    [SnakeBody.TYPES.UP]: [\r\n      [0, 0, 3, 3, 1, 3, 0, 0],\r\n      [0, 0, 3, 1, 1, 3, 0, 0],\r\n      [0, 0, 3, 1, 1, 3, 0, 0],\r\n      [0, 0, 3, 1, 1, 3, 0, 0],\r\n      [0, 0, 3, 3, 3, 3, 0, 0],\r\n      [0, 0, 0, 3, 3, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0]\r\n    ],\r\n    [SnakeBody.TYPES.RIGHT]: [\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 3, 3, 3, 3, 3],\r\n      [0, 0, 3, 3, 1, 1, 1, 1],\r\n      [0, 0, 3, 3, 1, 1, 1, 3],\r\n      [0, 0, 0, 3, 3, 3, 3, 3],\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0]\r\n    ],\r\n    [SnakeBody.TYPES.DOWN]: [\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 3, 3, 0, 0, 0],\r\n      [0, 0, 3, 3, 3, 3, 0, 0],\r\n      [0, 0, 3, 1, 1, 3, 0, 0],\r\n      [0, 0, 3, 1, 1, 3, 0, 0],\r\n      [0, 0, 3, 1, 1, 3, 0, 0],\r\n      [0, 0, 3, 1, 3, 3, 0, 0]\r\n    ],\r\n    [SnakeBody.TYPES.LEFT]: [\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [3, 3, 3, 3, 3, 0, 0, 0],\r\n      [3, 1, 1, 1, 3, 3, 0, 0],\r\n      [1, 1, 1, 1, 3, 3, 0, 0],\r\n      [3, 3, 3, 3, 3, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0]\r\n    ]\r\n  }\r\n\r\n  update () {}\r\n\r\n  draw (renderer) {\r\n    super.draw(renderer)\r\n  }\r\n\r\n  _getPixelData (type) {\r\n    return SnakeTail.PIXEL_DATAS[type]\r\n  }\r\n}\r\n","export class EventEmitter {\r\n  events = {};\r\n\r\n  addEventListener (eventName, callback) {\r\n    if (!this.events[eventName]) {\r\n      this.events[eventName] = []\r\n    }\r\n    this.events[eventName].push(callback)\r\n  }\r\n\r\n  removeEventListener (eventName, callback) {\r\n    if (!this.events[eventName]) {\r\n      return\r\n    }\r\n    this.events[eventName] = this.events[eventName].filter(cb => cb !== callback)\r\n  }\r\n\r\n  on (eventName, callback) {\r\n    this.addEventListener(eventName, callback)\r\n  }\r\n\r\n  off (eventName, callback) {\r\n    this.removeEventListener(eventName, callback)\r\n  }\r\n\r\n  once (eventName, callback) {\r\n    const onceCallback = () => {\r\n      callback()\r\n      this.removeEventListener(eventName, onceCallback)\r\n    }\r\n    this.addEventListener(eventName, onceCallback)\r\n  }\r\n\r\n  emit (eventName, ...args) {\r\n    if (!this.events[eventName]) {\r\n      return\r\n    }\r\n    this.events[eventName].forEach(cb => cb(...args))\r\n  }\r\n}\r\n","import { GameObject } from '../gameObject.js'\r\nimport { SnakeHead } from './snakeHead.js'\r\nimport { SnakeBody } from './snakeBody.js'\r\nimport { SnakeTail } from './snakeTail.js'\r\nimport { EventEmitter } from '../event.js'\r\nimport { isTouchable } from '../utils.js'\r\nimport {\r\n  DIRECTION,\r\n  INVALID_DIRECTION,\r\n  directionValues\r\n} from './constants.js'\r\n\r\nconst MAX_SPEED = isTouchable() ? 3 : 5\r\nconst INIT_SPEED = 1\r\nconst AI_SPEED = 16\r\n\r\nclass ListNode {\r\n  constructor (value, prev, next) {\r\n    this.value = value\r\n    this.next = next || null\r\n    this.prev = prev || null\r\n  }\r\n}\r\n\r\nexport class Snake extends GameObject {\r\n  constructor (config) {\r\n    const { length, rowNums, colNums, pixelSize } = config\r\n\r\n    super(0, 0)\r\n\r\n    this.length = length\r\n    this.rowNums = rowNums\r\n    this.colNums = colNums\r\n    this.pixelSize = pixelSize\r\n\r\n    this.direction = DIRECTION.RIGHT\r\n    this.speed = INIT_SPEED\r\n\r\n    this.beforeMove = null\r\n\r\n    this.head = new ListNode(new SnakeHead(length, 1, pixelSize, SnakeHead.TYPES.RIGHT))\r\n    let tail = this.head\r\n    for (let i = 1; i < length - 1; i++) {\r\n      tail.next = new ListNode(new SnakeBody(length - i, 1, pixelSize, SnakeBody.TYPES.HORIZONTAL), tail)\r\n      tail = tail.next\r\n    }\r\n    tail.next = new ListNode(new SnakeTail(1, 1, pixelSize, SnakeTail.TYPES.RIGHT), tail)\r\n    tail = tail.next\r\n    this.tail = tail\r\n\r\n    this._elapsed = 0\r\n    this._canGrow = false\r\n    this._directionQueue = []\r\n    this._lastDirection = this.direction\r\n    this._eventEmitter = new EventEmitter()\r\n    this._dash = 0\r\n  }\r\n\r\n  update (elapsed) {\r\n    this._elapsed += elapsed\r\n    const aiSpeed = this.beforeMove ? AI_SPEED : 0\r\n    if (this._elapsed >= 1000 / (aiSpeed || this._dash || this.speed)) {\r\n      this._elapsed = 0\r\n      if (this.beforeMove) {\r\n        const isTailAccessible = !this._canGrow\r\n        this.direction = this.beforeMove({ isTailAccessible })\r\n      } else if (this._directionQueue.length > 0) {\r\n        this._lastDirection = this.direction\r\n        this.direction = this._directionQueue.shift()\r\n      }\r\n      if (this._canGrow) {\r\n        this._doGrow()\r\n        this._canGrow = false\r\n      } else {\r\n        this.move()\r\n      }\r\n    }\r\n  }\r\n\r\n  draw (renderer) {\r\n    for (let node = this.tail; node; node = node.prev) {\r\n      if (node.value.visible) {\r\n        node.value.draw(renderer)\r\n      }\r\n    }\r\n  }\r\n\r\n  move () {\r\n    for (let p = this.tail; p.prev; p = p.prev) {\r\n      p.value.x = p.prev.value.x\r\n      p.value.y = p.prev.value.y\r\n      if (SnakeBody.ENDPOINT_TYPES.includes(p.prev.value.type)) {\r\n        p.value.type = SnakeBody.ENDPOINT_TYPES_TO_TYPES[p.prev.value.type]\r\n      } else {\r\n        p.value.type = p.prev.value.type\r\n      }\r\n    }\r\n    this.tail.value.type = this._calcTailType()\r\n    const head = this.head\r\n    const direction = directionValues[this.direction]\r\n    head.value.x += direction[1]\r\n    head.value.y += direction[0]\r\n    head.value.type = SnakeHead.DIRECTION_TO_TYPE[this.direction]\r\n    if (this.direction !== this._lastDirection) {\r\n      head.value.type = SnakeHead.DIRECTION_TO_TYPE[this.direction]\r\n      head.next.value.type = SnakeBody.DIRECTION_TO_TYPE['' + this._lastDirection + this.direction]\r\n      this._lastDirection = this.direction\r\n    }\r\n  }\r\n\r\n  dash () {\r\n    this._dash = 10\r\n    setTimeout(() => {\r\n      this._dash = 0\r\n    }, 300)\r\n  }\r\n\r\n  _calcTailType () {\r\n    const tail = this.tail.value\r\n    const tailPrev = this.tail.prev.value\r\n    if (tail.x === tailPrev.x) {\r\n      return tail.y < tailPrev.y ? SnakeTail.TYPES.DOWN : SnakeTail.TYPES.UP\r\n    } else {\r\n      return tail.x < tailPrev.x ? SnakeTail.TYPES.RIGHT : SnakeTail.TYPES.LEFT\r\n    }\r\n  }\r\n\r\n  grow () {\r\n    this._canGrow = true\r\n  }\r\n\r\n  toString () {\r\n    let str = ''\r\n    for (let node = this.head; node; node = node.next) {\r\n      str += `[${node.value.x},${node.value.y},${node.value.type}] `\r\n    }\r\n    return str\r\n  }\r\n\r\n  _doGrow () {\r\n    const head = this.head\r\n    const node = new ListNode(new SnakeBody(head.value.x, head.value.y, this.pixelSize, head.value.type), head, head.next)\r\n    head.next.prev = node\r\n    head.next = node\r\n    this.length++\r\n    const direction = directionValues[this.direction]\r\n    head.value.x += direction[1]\r\n    head.value.y += direction[0]\r\n    if (this.direction !== this._lastDirection) {\r\n      head.value.type = SnakeHead.DIRECTION_TO_TYPE[this.direction]\r\n      head.next.value.type = SnakeBody.DIRECTION_TO_TYPE['' + this._lastDirection + this.direction]\r\n      this._lastDirection = this.direction\r\n    }\r\n\r\n    this._eventEmitter.emit('statusChanged', this.length, this.speed)\r\n  }\r\n\r\n  changeDirection (direction) {\r\n    if (this._directionQueue.length === 0) {\r\n      if (direction !== this.direction && INVALID_DIRECTION[direction] !== this.direction) {\r\n        this._directionQueue.push(direction)\r\n      }\r\n    } else {\r\n      const lastDirection = this._directionQueue[this._directionQueue.length - 1]\r\n      if (direction !== lastDirection && INVALID_DIRECTION[direction] !== lastDirection) {\r\n        this._directionQueue.push(direction)\r\n      }\r\n    }\r\n  }\r\n\r\n  speedUp () {\r\n    this.speed = Math.min(this.speed + 1, MAX_SPEED)\r\n\r\n    this._eventEmitter.emit('statusChanged', this.length, this.speed)\r\n  }\r\n\r\n  speedDown () {\r\n    this.speed = Math.max(this.speed - 1, 1)\r\n\r\n    this._eventEmitter.emit('statusChanged', this.length, this.speed)\r\n  }\r\n\r\n  isEat (food) {\r\n    const head = this.head\r\n    return head.value.x === food.x && head.value.y === food.y\r\n  }\r\n\r\n  isDead () {\r\n    const head = this.head\r\n    const { x: headX, y: headY } = head.value\r\n    if (headX < 1 || headX > this.colNums ||\r\n      headY < 1 || headY > this.rowNums) {\r\n      return true\r\n    }\r\n    for (let node = head.next; node; node = node.next) {\r\n      if (node.value.x === headX && node.value.y === headY) {\r\n        return true\r\n      }\r\n    }\r\n  }\r\n\r\n  forEach (cb) {\r\n    for (let node = this.head; node; node = node.next) {\r\n      cb(node.value)\r\n    }\r\n  }\r\n\r\n  includes (x, y) {\r\n    for (let node = this.head; node; node = node.next) {\r\n      if (node.value.x === x && node.value.y === y) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  onStatusChanged (cb) {\r\n    this._eventEmitter.on('statusChanged', cb)\r\n  }\r\n\r\n  getHead () {\r\n    return this.head.value\r\n  }\r\n\r\n  getTail () {\r\n    return this.tail.value\r\n  }\r\n}\r\n","import { GameObject } from './gameObject.js'\r\nimport { LP2RP } from './utils.js'\r\n\r\nexport const TYPE = {\r\n  APPLE: 0,\r\n  CHERRY: 1,\r\n  BANANA: 2,\r\n  WATERMELON: 3\r\n}\r\n\r\nconst COLORS = [\r\n  '',\r\n  '#59b574', '#4e1413', '#832525', '#bc3532', '#e23f40', '#e78385',\r\n  '#fceaaa', '#f3de70', '#cf641e', '#f37a2a', '#8e4413'\r\n]\r\n\r\nconst PIXEL_DATAS = {\r\n  [TYPE.APPLE]: [\r\n    [0, 0, 0, 1, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 2, 0, 0, 0],\r\n    [0, 0, 3, 3, 2, 3, 0, 0],\r\n    [0, 3, 6, 6, 2, 4, 3, 0],\r\n    [0, 3, 5, 5, 5, 4, 3, 0],\r\n    [0, 3, 4, 4, 4, 4, 3, 0],\r\n    [0, 0, 3, 3, 3, 3, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0]\r\n  ],\r\n  [TYPE.CHERRY]: [\r\n    [0, 0, 0, 0, 1, 1, 1, 0],\r\n    [0, 0, 0, 0, 2, 1, 0, 1],\r\n    [0, 0, 0, 2, 0, 2, 0, 0],\r\n    [0, 0, 0, 2, 0, 4, 4, 0],\r\n    [0, 0, 3, 4, 3, 5, 6, 4],\r\n    [0, 3, 5, 6, 3, 5, 5, 4],\r\n    [0, 3, 5, 5, 3, 3, 3, 0],\r\n    [0, 0, 3, 3, 0, 0, 0, 0]\r\n  ],\r\n  [TYPE.BANANA]: [\r\n    [0, 0, 0, 11, 11, 11, 11, 11],\r\n    [0, 0, 0, 11, 7, 8, 8, 11],\r\n    [0, 0, 0, 0, 9, 8, 11, 0],\r\n    [0, 0, 0, 9, 8, 8, 10, 0],\r\n    [0, 0, 9, 8, 8, 8, 10, 0],\r\n    [9, 9, 8, 8, 7, 10, 0, 0],\r\n    [9, 8, 8, 7, 10, 0, 0, 0],\r\n    [0, 9, 9, 9, 0, 0, 0, 0]\r\n  ],\r\n  [TYPE.WATERMELON]: [\r\n    [0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0],\r\n    [1, 6, 4, 4, 2, 4, 4, 1],\r\n    [1, 2, 4, 4, 4, 4, 4, 1],\r\n    [1, 4, 4, 2, 4, 4, 2, 1],\r\n    [0, 1, 4, 4, 4, 4, 1, 0],\r\n    [0, 0, 1, 1, 1, 1, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0]\r\n  ]\r\n}\r\n\r\nexport class Food extends GameObject {\r\n  constructor (x, y, pixelSize, type) {\r\n    super(x, y)\r\n    this.pixelSize = pixelSize\r\n    this.type = type\r\n  }\r\n\r\n  update () {}\r\n\r\n  draw (renderer) {\r\n    const { pixelSize, type } = this\r\n    const pixelData = PIXEL_DATAS[type]\r\n    const { x, y } = LP2RP(this.x, this.y, pixelSize)\r\n    for (let r = 0; r < pixelData.length; r++) {\r\n      for (let c = 0; c < pixelData[r].length; c++) {\r\n        if (pixelData[r][c] !== 0) {\r\n          renderer.drawRect(\r\n            x + c * pixelSize,\r\n            y + r * pixelSize,\r\n            pixelSize,\r\n            pixelSize,\r\n            COLORS[pixelData[r][c]]\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","export class Item {\r\n  constructor (value, code) {\r\n    this.value = value\r\n    this.code = code\r\n  }\r\n}\r\n\r\nexport class PriorityQueue {\r\n  constructor (arr) {\r\n    this.heap = []\r\n    if (arr && arr.length) {\r\n      this._initHeap(arr)\r\n    }\r\n  }\r\n\r\n  enqueue (item) {\r\n    this.heap.push(item)\r\n    this.moveUp(this.heap.length - 1)\r\n  }\r\n\r\n  dequeue () {\r\n    const { heap } = this\r\n    const top = heap.shift()\r\n    if (!this.isEmpty()) {\r\n      const last = heap.pop()\r\n      heap.unshift(last)\r\n      this.moveDown(0)\r\n    }\r\n    return top\r\n  }\r\n\r\n  isEmpty () {\r\n    return this.heap.length === 0\r\n  }\r\n\r\n  top () {\r\n    return this.heap[0]\r\n  }\r\n\r\n  find (cb) {\r\n    const { heap } = this\r\n    for (let i = 0; i < heap.length; ++i) {\r\n      if (cb(heap[i])) {\r\n        return heap[i]\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  findIndex (cb) {\r\n    const { heap } = this\r\n    for (let i = 0; i < heap.length; ++i) {\r\n      if (cb(heap[i])) {\r\n        return i\r\n      }\r\n    }\r\n    return -1\r\n  }\r\n\r\n  toString () {\r\n    return this.heap.map(item => item.value).join(', ')\r\n  }\r\n\r\n  swap (i, j) {\r\n    const { heap } = this;\r\n    [heap[i], heap[j]] = [heap[j], heap[i]]\r\n  }\r\n\r\n  moveUp (index) {\r\n    const { heap } = this\r\n    while (index !== 0) {\r\n      const parent = Math.floor((index - 1) / 2)\r\n      if (heap[index].code < heap[parent].code) {\r\n        this.swap(parent, index)\r\n        index = parent\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  moveDown (index) {\r\n    const { heap } = this\r\n    const lastNoLeaf = Math.floor((heap.length - 2) / 2)\r\n    while (index <= lastNoLeaf) {\r\n      const left = heap[index * 2 + 1]\r\n      const right = heap[index * 2 + 2] || left\r\n      const max = left.code <= right.code ? left : right\r\n      const maxIndex = left.code <= right.code ? index * 2 + 1 : index * 2 + 2\r\n      if (max.code < heap[index].code) {\r\n        this.swap(maxIndex, index)\r\n        index = maxIndex\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  _initHeap (arr) {\r\n    const { heap } = this\r\n    heap.push(arr[0])\r\n    for (let i = 1; i < arr.length; ++i) {\r\n      heap.unshift(arr[i])\r\n      this.moveDown(0)\r\n    }\r\n  }\r\n}\r\n","import { Item, PriorityQueue } from './priorityQueue.js'\r\n\r\nconst getManhattanDistance = (x1, y1, x2, y2) => {\r\n  return Math.abs(x1 - x2) + Math.abs(y1 - y2)\r\n}\r\n\r\n/** heuristic method */\r\nconst h = (x1, y1, x2, y2) => {\r\n  let v = 4 * getManhattanDistance(x1, y1, x2, y2)\r\n  v *= (1.0 + 0.001)\r\n  return v\r\n}\r\n\r\n/**\r\n * get f value of current position\r\n * @param {number} sx - start x\r\n * @param {number} sy - start y\r\n * @param {number} cx - current x\r\n * @param {number} xy - current y\r\n * @param {number} tx - target x\r\n * @param {number} ty - target y\r\n * @returns number\r\n */\r\nconst f = (sx, sy, cx, cy, tx, ty) => {\r\n  const g = h(sx, sy, cx, cy)\r\n  const hValue = h(cx, cy, tx, ty)\r\n  const fValue = g + hValue\r\n  return {\r\n    g,\r\n    h: hValue,\r\n    f: fValue\r\n  }\r\n}\r\n\r\nconst _createItem = (sx, sy, cx, cy, tx, ty) => {\r\n  const { g, h, f: fValue } = f(sx, sy, cx, cy, tx, ty)\r\n  return new Item({ x: cx, y: cy, g, h, f: fValue, parent: null }, fValue)\r\n}\r\n\r\n/** direction, [y, x][], up, right, down, left */\r\nconst _dir = [[-1, 0], [0, 1], [1, 0], [0, -1]]\r\n\r\nconst _getNeighbors = (x, y, grid, close) => {\r\n  const neighbors = _dir.map(([yOffset, xOffset]) => ({ x: x + xOffset, y: y + yOffset }))\r\n  return neighbors.filter(({ x, y }) => {\r\n    return x >= 0 && y >= 0 && x < grid.length && y < grid[0].length && grid[y][x] === 0 && !close.has('' + x + y)\r\n  })\r\n}\r\n\r\n/** transform link list of item to array */\r\nconst _itemLinkToPath = (item) => {\r\n  const path = []\r\n  for (let p = item; p; p = p.parent) {\r\n    path.unshift({ x: p.x, y: p.y })\r\n  }\r\n  return path\r\n}\r\n\r\n/**\r\n * A star algorithm\r\n * @param {number} x1 - start x\r\n * @param {number} y1 - start y\r\n * @param {number} x2 - target x\r\n * @param {number} y2 - target y\r\n * @param {number[][]} grid - grid, 0: accessible, 1: not accessible\r\n * @returns {{x: number, y: number}[]} - path, {x, y}[]\r\n */\r\nexport const search = (x1, y1, x2, y2, grid) => {\r\n  const open = new PriorityQueue()\r\n  const close = new Set()\r\n  const start = _createItem(x1, y1, x1, y1, x2, y2)\r\n  open.enqueue(start)\r\n  while (!open.isEmpty()) {\r\n    const curItem = open.dequeue()\r\n    const { value: { x: cx, y: cy } } = curItem\r\n    close.add('' + cx + cy)\r\n    if (cx === x2 && cy === y2) {\r\n      return _itemLinkToPath(curItem)\r\n    }\r\n\r\n    const neighbors = _getNeighbors(curItem.value.x, curItem.value.y, grid, close)\r\n    for (const { x, y } of neighbors) {\r\n      const exist = open.find((item) => item.value.x === x && item.value.y === y)\r\n      if (exist) {\r\n        const { g, f: fValue } = f(x1, y1, x, y, x2, y2)\r\n        if (g < exist.value.g) {\r\n          exist.value.g = g\r\n          exist.value.f = fValue\r\n          exist.value.parent = curItem\r\n          const existIndex = open.findIndex((item) => item.value.x === x && item.value.y === y)\r\n          open.moveUp(existIndex)\r\n        }\r\n      } else {\r\n        const newItem = _createItem(cx, cy, x, y, x2, y2)\r\n        newItem.parent = curItem\r\n        open.enqueue(newItem)\r\n      }\r\n    }\r\n  }\r\n  return null\r\n}\r\n","import { DIRECTION, INVALID_DIRECTION } from './snake/index.js'\r\n\r\nimport { search } from './aStar.js'\r\nimport { getRandomInt, shuffle } from './utils.js'\r\n\r\n/** 0: accessible, 1: not accessible */\r\nconst ENTITY_TYPES = {\r\n  MAP_WALL: 1,\r\n  MAP_EMPTY: 0,\r\n  SNAKE: 1,\r\n  FOOD: 0\r\n}\r\n\r\n/**\r\n * transform map, snake and food to 2d array\r\n * @param {GameMap} gameMap\r\n * @param {Snake} snake\r\n * @param {Food} food\r\n */\r\nconst serializeEntities = (gameMap, snake, food) => {\r\n  const { rowNums, colNums } = gameMap\r\n  const arr = Array(rowNums + 2)\r\n  for (let i = 0; i < rowNums + 2; i++) {\r\n    arr[i] = Array(colNums + 2)\r\n    if (i === 0 || i === rowNums + 1) {\r\n      arr[i].fill(ENTITY_TYPES.MAP_WALL)\r\n    } else {\r\n      arr[i].fill(ENTITY_TYPES.MAP_EMPTY)\r\n      arr[i][0] = arr[i][colNums + 1] = ENTITY_TYPES.MAP_WALL\r\n    }\r\n  }\r\n\r\n  snake.forEach(el => {\r\n    arr[el.y][el.x] = ENTITY_TYPES.SNAKE\r\n  })\r\n  const { x: tailX, y: tailY } = snake.getTail()\r\n  arr[tailY][tailX] = ENTITY_TYPES.MAP_EMPTY\r\n\r\n  arr[food.y][food.x] = ENTITY_TYPES.FOOD\r\n  return arr\r\n}\r\n\r\n/** direction, [y, x, dir][] */\r\nconst _dir = [\r\n  [-1, 0, DIRECTION.UP],\r\n  [0, 1, DIRECTION.RIGHT],\r\n  [1, 0, DIRECTION.DOWN],\r\n  [0, -1, DIRECTION.LEFT]\r\n]\r\n\r\nconst _getHeadNeighborInfos = (grid, head, tail, food, isTailAccessible) => {\r\n  const { x: headX, y: headY } = head\r\n  const { x: tailX, y: tailY } = tail\r\n  const { x: foodX, y: foodY } = food\r\n  const neighbors = _dir.map(([yOffset, xOffset, dir]) => ({\r\n    x: headX + xOffset,\r\n    y: headY + yOffset,\r\n    dir,\r\n    /** length of path to snake tail */\r\n    tailPathLen: -1,\r\n    /** length of path to food */\r\n    foodPathLen: -1\r\n  }))\r\n  neighbors.forEach(el => {\r\n    if (el.x < 0 || el.y < 0 || el.x >= grid.length || el.y >= grid[0].length ||\r\n      grid[el.y][el.x] === 1) {\r\n      return\r\n    }\r\n\r\n    if (!isTailAccessible && el.x === tailX && el.y === tailY) {\r\n      return\r\n    }\r\n\r\n    const tailPath = search(el.x, el.y, tailX, tailY, grid)\r\n    if (tailPath) {\r\n      el.tailPathLen = tailPath.length - 1\r\n    }\r\n    const foodPath = search(el.x, el.y, foodX, foodY, grid)\r\n    if (foodPath) {\r\n      el.foodPathLen = foodPath.length - 1\r\n    }\r\n  })\r\n  return neighbors\r\n  // const result = neighbors.filter(el => el.tailPathLen !== -1);\r\n  // console.log('neighbors', result);\r\n  // return result;\r\n}\r\n\r\nlet callCnt = 0\r\n\r\nexport const getNextDirection = (gameMap, snake, food, isTailAccessible) => {\r\n  if (callCnt++ > 16) {\r\n    shuffle(_dir)\r\n    callCnt = 0\r\n  }\r\n  const grid = serializeEntities(gameMap, snake, food)\r\n  // console.log(grid);\r\n  const neighborInfos = _getHeadNeighborInfos(grid, snake.getHead(), snake.getTail(), food, isTailAccessible).filter(el => el.tailPathLen !== -1)\r\n  if (snake.length === (gameMap.colNums * gameMap.rowNums - 1)) {\r\n    const target = neighborInfos.find(el => el.x === food.x && el.y === food.y)\r\n    if (target) {\r\n      return target.dir\r\n    }\r\n  } else if (neighborInfos.length === 0) {\r\n    const randomDir = [DIRECTION.UP, DIRECTION.RIGHT, DIRECTION.DOWN, DIRECTION.LEFT]\r\n      .filter(el => el !== INVALID_DIRECTION[snake.direction])[getRandomInt(0, 3)]\r\n    // console.log('random', randomDir, snake.direction);\r\n    return randomDir\r\n  } else {\r\n    let sameDirectionItem\r\n    let minFoodPathLenItem\r\n    let maxTailPathLenItem\r\n    const canGotoTailPositions = neighborInfos.filter(el => el.tailPathLen !== -1)\r\n    for (const info of canGotoTailPositions) {\r\n      if (info.dir === snake.direction) {\r\n        sameDirectionItem = info\r\n      }\r\n      if (info.foodPathLen !== -1 && (!minFoodPathLenItem || info.foodPathLen < minFoodPathLenItem.foodPathLen)) {\r\n        minFoodPathLenItem = info\r\n      }\r\n      if (info.tailPathLen !== -1 && (!maxTailPathLenItem || info.tailPathLen > maxTailPathLenItem.tailPathLen)) {\r\n        maxTailPathLenItem = info\r\n      }\r\n    }\r\n    let result\r\n    if (sameDirectionItem) {\r\n      if (sameDirectionItem === minFoodPathLenItem) {\r\n        result = sameDirectionItem.dir\r\n      } else if (maxTailPathLenItem && snake.length > (gameMap.colNums * gameMap.rowNums / 2)) {\r\n        result = maxTailPathLenItem.dir\r\n      } else if (minFoodPathLenItem && minFoodPathLenItem.foodPathLen <= grid.length / 2) {\r\n        result = minFoodPathLenItem.dir\r\n      } else {\r\n        result = sameDirectionItem.dir\r\n      }\r\n    } else {\r\n      if (maxTailPathLenItem) {\r\n        result = maxTailPathLenItem.dir\r\n      } else if (minFoodPathLenItem) {\r\n        result = minFoodPathLenItem.dir\r\n      } else {\r\n        result = canGotoTailPositions[getRandomInt(0, canGotoTailPositions.length - 1)].dir\r\n      }\r\n    }\r\n    // console.log(result, snake.direction);\r\n    return result\r\n  }\r\n}\r\n","import { MainLoop } from './mainLoop.js'\r\nimport { Renderer } from './renderer.js'\r\nimport { Keyboard } from './keyboard.js'\r\n\r\nimport { GameMap } from './gameMap.js'\r\nimport { Snake, DIRECTION } from './snake/index.js'\r\nimport { Food, TYPE as FOODTYPE } from './food.js'\r\nimport { ResultText } from './resultText.js'\r\n\r\nimport { getRandomInt, isTouchable } from './utils.js'\r\nimport { getNextDirection } from './ai.js'\r\n\r\nconst ROW_NUM = 10\r\nconst COL_NUM = 10\r\nconst PIXEL_SIZE = 4\r\n\r\nconst mainLoop = new MainLoop()\r\n\r\nconst canvas = document.querySelector('#main-canvas')\r\nconst statusBar = document.querySelector('#status-bar')\r\nconst toolBar = document.querySelector('#tool-bar')\r\nconst ctrlBar = document.querySelector('#ctrl-bar')\r\nconst tipsBar = document.querySelector('#tips-bar')\r\nconst btnPause = document.querySelector('#btn-pause')\r\nconst btnRestart = document.querySelector('#btn-restart')\r\nconst btnAI = document.querySelector('#btn-ai')\r\nconst btnJoystickUp = document.querySelector('#btn-joystick-up')\r\nconst btnJoystickLeft = document.querySelector('#btn-joystick-left')\r\nconst btnJoystickRight = document.querySelector('#btn-joystick-right')\r\nconst btnJoystickDown = document.querySelector('#btn-joystick-down')\r\nconst btnDash = document.querySelector('#btn-dash')\r\n\r\ncanvas.width = PIXEL_SIZE * 8 * (COL_NUM + 2)\r\nstatusBar.style.width = canvas.width + 'px'\r\nctrlBar.style.width = canvas.width + 'px'\r\ntoolBar.style.width = canvas.width + 'px'\r\ntipsBar.style.width = canvas.width + 'px'\r\n\r\ncanvas.height = PIXEL_SIZE * 8 * (ROW_NUM + 2)\r\n\r\nif (isTouchable()) {\r\n  ctrlBar.classList.remove('hidden')\r\n} else {\r\n  tipsBar.classList.remove('hidden')\r\n}\r\n\r\nconst setStatusText = (snakeLength) => {\r\n  statusBar.innerHTML = `Length: ${snakeLength}`\r\n}\r\n\r\nconst renderer = new Renderer(canvas)\r\n\r\nconst resultText = new ResultText(0, (ROW_NUM + 2) * PIXEL_SIZE * 8 / 4, {\r\n  width: (COL_NUM + 2) * PIXEL_SIZE * 8,\r\n  height: (ROW_NUM + 2) * PIXEL_SIZE * 8 / 2,\r\n  text: ''\r\n})\r\nresultText.visible = false\r\n\r\nconst gameMap = new GameMap({\r\n  x: 0,\r\n  y: 0,\r\n  rowNums: ROW_NUM,\r\n  colNums: COL_NUM,\r\n  pixelSize: PIXEL_SIZE\r\n})\r\n\r\nlet snake = new Snake({\r\n  length: 3,\r\n  rowNums: ROW_NUM,\r\n  colNums: COL_NUM,\r\n  pixelSize: PIXEL_SIZE\r\n})\r\nsnake.onStatusChanged(setStatusText)\r\nsetStatusText(snake.length, snake.speed)\r\n\r\nconst generateFoodXY = () => {\r\n  let x, y\r\n  do {\r\n    x = getRandomInt(0, gameMap.colNums) + 1\r\n    y = getRandomInt(0, gameMap.rowNums) + 1\r\n  } while (snake.includes(x, y))\r\n\r\n  return [x, y]\r\n}\r\n\r\nconst food = new Food(...generateFoodXY(), PIXEL_SIZE, FOODTYPE.CHERRY)\r\n\r\nconst AI = (options) => {\r\n  const { isTailAccessible } = options\r\n  return getNextDirection(gameMap, snake, food, isTailAccessible)\r\n}\r\n\r\nconst update = (elapsed) => {\r\n  gameMap.update()\r\n  food.update()\r\n  if (snake.length === COL_NUM * ROW_NUM) {\r\n    if (!resultText.visible) {\r\n      resultText.text = 'You Win!'\r\n      resultText.textColor = 'Green'\r\n      resultText.visible = true\r\n    }\r\n  } else if (!snake.isDead()) {\r\n    snake.update(elapsed)\r\n    if (snake.isEat(food)) {\r\n      snake.grow()\r\n      snake.speedUp()\r\n      if (snake.length < COL_NUM * ROW_NUM) {\r\n        [food.x, food.y] = generateFoodXY()\r\n        food.type = [FOODTYPE.APPLE, FOODTYPE.CHERRY, FOODTYPE.BANANA, FOODTYPE.WATERMELON][getRandomInt(0, 4)]\r\n      } else {\r\n        food.visible = false\r\n      }\r\n    }\r\n  } else {\r\n    btnPause.setAttribute('disabled', 'disabled')\r\n    resultText.text = 'YOU DIED'\r\n    resultText.textColor = 'Red'\r\n    resultText.visible = true\r\n  }\r\n}\r\n\r\nconst draw = () => {\r\n  renderer.clear('DarkSeaGreen')\r\n  gameMap.visible && gameMap.draw(renderer)\r\n  food.visible && food.draw(renderer)\r\n  snake.visible && snake.draw(renderer)\r\n  resultText.visible && resultText.draw(renderer)\r\n}\r\n\r\nconst keyW = new Keyboard('KeyW')\r\nconst keyD = new Keyboard('KeyD')\r\nconst keyS = new Keyboard('KeyS')\r\nconst keyA = new Keyboard('KeyA')\r\nconst keyArrowUp = new Keyboard('ArrowUp')\r\nconst keyArrowRight = new Keyboard('ArrowRight')\r\nconst keyArrowLeft = new Keyboard('ArrowLeft')\r\nconst keyArrowDown = new Keyboard('ArrowDown')\r\nconst keySpace = new Keyboard('Space')\r\n\r\nconst checkInput = () => {\r\n  if (keyW.isPressed() || keyArrowUp.isPressed()) {\r\n    snake.changeDirection(DIRECTION.UP)\r\n  } else if (keyD.isPressed() || keyArrowRight.isPressed()) {\r\n    snake.changeDirection(DIRECTION.RIGHT)\r\n  } else if (keyS.isPressed() || keyArrowDown.isPressed()) {\r\n    snake.changeDirection(DIRECTION.DOWN)\r\n  } else if (keyA.isPressed() || keyArrowLeft.isPressed()) {\r\n    snake.changeDirection(DIRECTION.LEFT)\r\n  } else if (keySpace.isPressed()) {\r\n    snake.dash()\r\n  }\r\n}\r\n\r\nbtnJoystickUp.addEventListener('mousedown', () => {snake.changeDirection(DIRECTION.UP) })\r\nbtnJoystickUp.addEventListener('touchstart', () => { snake.changeDirection(DIRECTION.UP) })\r\nbtnJoystickRight.addEventListener('mousedown', () => { snake.changeDirection(DIRECTION.RIGHT) })\r\nbtnJoystickRight.addEventListener('touchstart', () => { snake.changeDirection(DIRECTION.RIGHT) })\r\nbtnJoystickDown.addEventListener('mousedown', () => { snake.changeDirection(DIRECTION.DOWN) })\r\nbtnJoystickDown.addEventListener('touchstart', () => { snake.changeDirection(DIRECTION.DOWN) })\r\nbtnJoystickLeft.addEventListener('mousedown', () => { snake.changeDirection(DIRECTION.LEFT) })\r\nbtnJoystickLeft.addEventListener('touchstart', () => { snake.changeDirection(DIRECTION.LEFT) })\r\nbtnDash.addEventListener('mousedown', () => { snake.dash() })\r\nbtnDash.addEventListener('touchstart', () => { snake.dash() })\r\n\r\nlet isPaused = false\r\nlet isEnableAI = false\r\n\r\nconst restart = () => {\r\n  snake = new Snake({\r\n    length: 3,\r\n    rowNums: ROW_NUM,\r\n    colNums: COL_NUM,\r\n    pixelSize: PIXEL_SIZE\r\n  })\r\n  snake.onStatusChanged(setStatusText)\r\n  setStatusText(snake.length, snake.speed);\r\n  [food.x, food.y] = generateFoodXY()\r\n  food.type = [FOODTYPE.APPLE, FOODTYPE.CHERRY, FOODTYPE.BANANA, FOODTYPE.WATERMELON][getRandomInt(0, 4)]\r\n  food.visible = true\r\n\r\n  if (isEnableAI) {\r\n    snake.beforeMove = AI\r\n  }\r\n\r\n  resultText.text = ''\r\n  resultText.visible = false\r\n}\r\n\r\nbtnRestart.addEventListener('click', () => {\r\n  restart()\r\n  btnPause.removeAttribute('disabled')\r\n  btnRestart.blur()\r\n})\r\n\r\nbtnPause.addEventListener('click', () => {\r\n  isPaused = !isPaused\r\n  if (isPaused) {\r\n    btnRestart.setAttribute('disabled', 'disabled')\r\n    btnPause.innerHTML = 'Resume'\r\n    resultText.text = 'Paused'\r\n    resultText.textColor = 'White'\r\n    resultText.visible = true\r\n  } else {\r\n    btnRestart.removeAttribute('disabled')\r\n    btnPause.innerHTML = 'Pause'\r\n    resultText.text = ''\r\n    resultText.visible = false\r\n  }\r\n  btnPause.blur()\r\n})\r\n\r\nbtnAI.addEventListener('click', () => {\r\n  isEnableAI = !isEnableAI\r\n  if (isEnableAI) {\r\n    snake.beforeMove = AI\r\n    btnAI.classList.add('btn-ctrl-enable')\r\n  } else {\r\n    snake.beforeMove = null\r\n    btnAI.classList.remove('btn-ctrl-enable')\r\n  }\r\n  btnAI.blur()\r\n})\r\n\r\nconst main = () => {\r\n  mainLoop.setOnLoop((elapsed) => {\r\n    if (!isPaused) {\r\n      checkInput()\r\n      update(elapsed)\r\n    }\r\n    draw()\r\n  })\r\n  mainLoop.start()\r\n}\r\n\r\nmain()\r\n","export class Renderer {\r\n  constructor (canvas) {\r\n    this.canvas = canvas\r\n    this.ctx = canvas.getContext('2d')\r\n  }\r\n\r\n  clear (fillColor) {\r\n    if (!fillColor) {\r\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n    } else {\r\n      this.ctx.save()\r\n      this.ctx.fillStyle = fillColor\r\n      this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\r\n      this.ctx.restore()\r\n    }\r\n  }\r\n\r\n  drawRect (x, y, width, height, color) {\r\n    const { ctx } = this\r\n    ctx.save()\r\n    ctx.fillStyle = color\r\n    ctx.fillRect(x, y, width, height)\r\n    ctx.restore()\r\n  }\r\n\r\n  drawCircle (x, y, radius, color) {\r\n    const { ctx } = this\r\n    ctx.save()\r\n    ctx.fillStyle = color\r\n    ctx.beginPath()\r\n    ctx.arc(x, y, radius, 0, 2 * Math.PI)\r\n    ctx.fill()\r\n    ctx.restore()\r\n  }\r\n\r\n  drawText (x, y, text, color, font) {\r\n    const { ctx } = this\r\n    ctx.save()\r\n    ctx.textAlign = 'left'\r\n    ctx.textBaseline = 'top'\r\n    ctx.font = font\r\n    ctx.fillStyle = color\r\n    ctx.fillText(text, x, y)\r\n    ctx.restore()\r\n  }\r\n\r\n  measureText (text, font) {\r\n    const { ctx } = this\r\n    ctx.save()\r\n    ctx.font = font\r\n    const textMetrics = ctx.measureText(text)\r\n    ctx.restore()\r\n\r\n    const width = textMetrics.width\r\n    const height = textMetrics.actualBoundingBoxAscent + textMetrics.actualBoundingBoxDescent\r\n\r\n    return { width, height }\r\n  }\r\n}\r\n","import { GameObject } from './gameObject.js'\r\n\r\nexport class ResultText extends GameObject {\r\n  constructor (x, y, options) {\r\n    super(x, y)\r\n\r\n    const { width, height, text, textColor } = options\r\n\r\n    this.width = width\r\n    this.height = height\r\n    this.text = text\r\n    this.textColor = textColor || 'White'\r\n\r\n    this.font = `${height / 5}px sans-serif`\r\n  }\r\n\r\n  draw (renderer) {\r\n    renderer.drawRect(this.x, this.y, this.width, this.height, '#8fbc8fcc')\r\n    const { width: realWidth } = renderer.measureText(this.text, this.font)\r\n    renderer.drawText(this.x + (this.width - realWidth) / 2, this.y + this.height / 5 * 2, this.text, this.textColor, this.font)\r\n  }\r\n}\r\n"],"names":["KEY_STATUS","keyStatus","window","addEventListener","event","code","Keyboard","static","key","constructor","this","isPressed","isReleased","GameObject","x","y","visible","update","draw","renderer","getRandomInt","min","max","Math","ceil","floor","random","isTouchable","navigator","maxTouchPoints","LP2RP","pixelSize","COLORS","PIXEL_DATAS","TREE","OAK","CELL","DIRECTION","UP","RIGHT","DOWN","LEFT","INVALID_DIRECTION","directionValues","HORIZONTAL_PIXEL_DATAS","VERTICAL_PIXEL_DATAS","SnakeBody","HORIZONTAL","VERTICAL","LEFTTOP","RIGHTTOP","LEFTBOTTOM","RIGHTBOTTOM","TYPES","type","super","pixelData","_getPixelData","r","length","c","drawRect","_getColor","colorType","SnakeHead","SnakeTail","EventEmitter","events","eventName","callback","push","removeEventListener","filter","cb","on","off","once","onceCallback","emit","args","forEach","MAX_SPEED","ListNode","value","prev","next","Snake","config","rowNums","colNums","direction","speed","beforeMove","head","tail","i","_elapsed","_canGrow","_directionQueue","_lastDirection","_eventEmitter","_dash","elapsed","aiSpeed","isTailAccessible","shift","_doGrow","move","node","p","ENDPOINT_TYPES","includes","ENDPOINT_TYPES_TO_TYPES","_calcTailType","DIRECTION_TO_TYPE","dash","setTimeout","tailPrev","grow","toString","str","changeDirection","lastDirection","speedUp","speedDown","isEat","food","isDead","headX","headY","onStatusChanged","getHead","getTail","Item","PriorityQueue","arr","heap","_initHeap","enqueue","item","moveUp","dequeue","top","isEmpty","last","pop","unshift","moveDown","find","findIndex","map","join","swap","j","index","parent","lastNoLeaf","left","right","maxIndex","h","x1","y1","x2","y2","v","abs","getManhattanDistance","f","sx","sy","cx","cy","tx","ty","g","hValue","_createItem","fValue","_dir","_getNeighbors","grid","close","yOffset","xOffset","has","_itemLinkToPath","path","search","open","Set","start","curItem","add","neighbors","exist","existIndex","newItem","callCnt","mainLoop","loopStatus","onLoop","lastTimeStamp","setOnLoop","loop","timestamp","requestAnimationFrame","bind","performance","now","pause","stop","canvas","document","querySelector","statusBar","toolBar","ctrlBar","tipsBar","btnPause","btnRestart","btnAI","btnJoystickUp","btnJoystickLeft","btnJoystickRight","btnJoystickDown","btnDash","width","PIXEL_SIZE","style","height","classList","remove","setStatusText","snakeLength","innerHTML","ctx","getContext","clear","fillColor","save","fillStyle","fillRect","restore","clearRect","color","drawCircle","radius","beginPath","arc","PI","fill","drawText","text","font","textAlign","textBaseline","fillText","measureText","textMetrics","actualBoundingBoxAscent","actualBoundingBoxDescent","resultText","options","textColor","realWidth","gameMap","_treeTypeArr","Array","_drawTrees","_drawCells","_drawCell","rx","ry","typeIndex","snake","generateFoodXY","AI","shuffle","el","tailX","tailY","serializeEntities","neighborInfos","foodX","foodY","dir","tailPathLen","foodPathLen","tailPath","foodPath","_getHeadNeighborInfos","sameDirectionItem","minFoodPathLenItem","maxTailPathLenItem","canGotoTailPositions","info","result","target","getNextDirection","keyW","keyD","keyS","keyA","keyArrowUp","keyArrowRight","keyArrowLeft","keyArrowDown","keySpace","isPaused","isEnableAI","removeAttribute","blur","setAttribute","COL_NUM"],"sourceRoot":""}